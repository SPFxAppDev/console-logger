{"version":3,"sources":["../../src/functions/arrayFrom.ts","../../src/functions/isset.ts","../../src/functions/isNullOrEmpty.ts","../../src/functions/cssClasses.ts","../../src/functions/extend.ts","../../src/functions/getDeepOrDefault.ts","../../src/functions/getUrlParameter.ts","../../src/functions/isFunction.ts","../../src/functions/issetDeep.ts","../../src/functions/toBoolean.ts","../../src/functions/index.ts","../src/index.ts","../../src/logger/Logger.ts","../../src/logger/ClassLoggerBase.ts","../../src/logger/decorators/decorators.utility.ts","../../src/logger/decorators/class.decorators.ts","../../src/logger/decorators/method.decorators.ts","../../src/logger/decorators/property.decorators.ts","../../src/logger/decorators/logFactory.decorators.ts","../../src/index.ts","App.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"App.7a936cda.js","sourceRoot":"..\\..\\src","sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,"\r\nimport { toBoolean, isset, isNullOrEmpty, getUrlParameter } from '@spfxappdev/utility';\r\n\r\n\r\nexport const enum LogLevel {\r\n    None = 0,\r\n    Log = 1 << 0,\r\n    Info = 1 << 1,\r\n    Warning = 1 << 2,\r\n    Error = 1 << 3,\r\n    Table = 1 << 4,\r\n    All = ~(~0 << 5)\r\n};\r\n\r\nconst DefaultLoggerSettings: ILoggerSettings = {\r\n    LogNamespaceUrlParameterName: 'LogOnly',\r\n    LoggingEnabledUrlParameterName: 'EnableConsoleLogging',\r\n    LogLevel: LogLevel.All\r\n};\r\n\r\nexport interface ILoggerSettings {\r\n    LogNamespaceUrlParameterName?: string;\r\n    LoggingEnabledUrlParameterName?: string;\r\n    LogLevel: LogLevel;\r\n}\r\n\r\nexport enum LogType {\r\n    Warning,\r\n    Info,\r\n    Error,\r\n    Table,\r\n    Log\r\n}\r\n\r\nexport class Logger {\r\n\r\n    public static DefaultSettings: ILoggerSettings = DefaultLoggerSettings;\r\n\r\n    private _loggingEnabledByUrl: boolean = undefined;\r\n\r\n    private _namespacesToLog: string[] = undefined;\r\n\r\n    private get isLoggingEnabledByUrl(): boolean {\r\n        // URL Parameter already checked, return value from Parameter\r\n        if(isset(this._loggingEnabledByUrl)) {\r\n            return this._loggingEnabledByUrl;\r\n        }\r\n\r\n        // URL Parameter is not checked. Check and set Parameter\r\n        let isEnabledValue: string = getUrlParameter(this.settings.LoggingEnabledUrlParameterName);\r\n\r\n        if (!isset(isEnabledValue)) {\r\n            this._loggingEnabledByUrl = false;\r\n            return this._loggingEnabledByUrl;\r\n        }\r\n\r\n        this._loggingEnabledByUrl = toBoolean(isEnabledValue);\r\n\r\n        return this._loggingEnabledByUrl;\r\n    }\r\n\r\n    private get isLoggingEnabledBySettings(): boolean {\r\n        return !(LogLevel.None == (this.settings.LogLevel | LogLevel.None))\r\n    }\r\n\r\n    private get namespacesToLogFromUrl(): string[] {\r\n        if(isset(this._namespacesToLog)) {\r\n            return this._namespacesToLog;\r\n        }\r\n\r\n        const modules: string = getUrlParameter(this.settings.LogNamespaceUrlParameterName);\r\n\r\n        if(isNullOrEmpty(modules)) {\r\n            this._namespacesToLog = [];\r\n            return this._namespacesToLog;\r\n        }\r\n\r\n        this._namespacesToLog = modules.toLowerCase().split(',');\r\n        return this._namespacesToLog;\r\n    }\r\n\r\n    constructor(private logNamespace: string, private settings: ILoggerSettings = null) {\r\n        if(!isset(settings)) {\r\n            settings = {...{}, ...Logger.DefaultSettings};\r\n        }\r\n\r\n        this.settings = {...DefaultLoggerSettings, ...Logger.DefaultSettings, ...settings}\r\n    }\r\n\r\n    public getCurrentSettings(): ILoggerSettings {\r\n        return {...{}, ...this.settings};\r\n    }\r\n\r\n    public logToConsole(logType: LogType, ...data: any[]): void {\r\n        if (!isset(console)) {\r\n            return;\r\n        }\r\n\r\n        if (!this.isLoggingEnabledBySettings && !this.isLoggingEnabledByUrl) {\r\n            return;\r\n        }\r\n\r\n        //If namespaces are filtered by URL and the current namespace is NOT one of it\r\n        if(!isNullOrEmpty(this.namespacesToLogFromUrl) && \r\n        this.namespacesToLogFromUrl.indexOf(this.logNamespace.toLowerCase()) < 0) {\r\n            return;\r\n        }\r\n\r\n        const valuesToLog: any[] = [...data, this.logNamespace];\r\n        const logEnabled: boolean = this.isLoggingEnabledByUrl;\r\n        const currentLogLevel = this.settings.LogLevel;\r\n        switch (logType) {\r\n            case LogType.Warning:\r\n                if (logEnabled || LogLevel.Warning == (currentLogLevel & LogLevel.Warning)) {\r\n                    console.warn(...valuesToLog);\r\n                }\r\n                break;\r\n            case LogType.Info:\r\n                if (logEnabled || LogLevel.Info == (currentLogLevel & LogLevel.Info)) {\r\n                    /* tslint:disable:no-console */\r\n                    console.info(...valuesToLog);\r\n                }\r\n                break;\r\n            case LogType.Error:\r\n                if (logEnabled || LogLevel.Info == (currentLogLevel & LogLevel.Info)) {\r\n                    console.error(...valuesToLog);\r\n                }\r\n                break;\r\n            case LogType.Table:\r\n                if (!(logEnabled || LogLevel.Table == (currentLogLevel & LogLevel.Table))) {\r\n                    break;\r\n                }\r\n\r\n                if (typeof console.table !== 'function') {\r\n                    /* tslint:disable:no-console */\r\n                    console.info('Your browser does not support console.table, console.log was used instead', this.logNamespace);\r\n                    console.log(...valuesToLog);\r\n                    break;\r\n                }\r\n\r\n                data.forEach((d: any) => {\r\n                    const valueType: string = typeof d;\r\n\r\n                    if (valueType !== 'array' && valueType !== 'object') {\r\n                    /* tslint:disable:no-console */\r\n                        console.info('It is not possible to log table if logValue is not an array or object, console.log was used instead', this.logNamespace);\r\n                        console.log(d, this.logNamespace);\r\n                        return;\r\n                    }\r\n\r\n                    console.table(d, [this.logNamespace]);\r\n\r\n                });\r\n                break;\r\n            case LogType.Log:\r\n            default:\r\n                if (logEnabled || LogLevel.Log == (currentLogLevel & LogLevel.Log)) {\r\n                    console.log(...valuesToLog);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public log(...data: any[]): void {\r\n        this.logToConsole(LogType.Log, ...data);\r\n    }\r\n\r\n    public warn(...data: any[]): void {\r\n        this.logToConsole(LogType.Warning, ...data);\r\n    }\r\n\r\n    public info(...data: any[]): void {\r\n        this.logToConsole(LogType.Info, ...data);\r\n    }\r\n\r\n    public error(...data: any[]): void {\r\n        this.logToConsole(LogType.Error, ...data);\r\n    }\r\n\r\n    public table(...data: any[]): void {\r\n        this.logToConsole(LogType.Table, ...data);\r\n    }\r\n\r\n    public static Log(logNamespace: string, logType: LogType, ...data: any[]): void {\r\n        const logger: Logger = new Logger(logNamespace);\r\n        switch (logType) {\r\n            case LogType.Error:\r\n                logger.error(...data);\r\n                break;\r\n            case LogType.Info:\r\n                logger.info(...data);\r\n                break;\r\n            case LogType.Table:\r\n                logger.table(...data);\r\n                break;\r\n            case LogType.Warning:\r\n                logger.warn(...data);\r\n                break;\r\n            case LogType.Log:\r\n            default:\r\n                logger.log(...data);\r\n                break;\r\n        }\r\n    }\r\n}","import { ILoggerSettings, Logger, LogType } from './Logger';\r\nimport { IClassLogger } from './IClassLogger';\r\n\r\n/**\r\n* A Base Class for Console Logger\r\n* For Intellisense with the @classLogger(), use this:\r\n* @example export interface MyClass extends ClassLoggerBase {}; export class MyClass;\r\n*/\r\nexport abstract class ClassLoggerBase implements IClassLogger {\r\n\r\n    public logger: Logger;\r\n\r\n    constructor() {\r\n        this.assignLogger();\r\n    }\r\n\r\n    public log(logType: LogType, ...data: any[]): void {\r\n        this.logger.logToConsole(logType, ...data);\r\n    }\r\n\r\n    public getLogCategory(): string {\r\n        return 'SPFxAppDev Logger BASE';\r\n    }\r\n\r\n    public getLogSettings(): ILoggerSettings {\r\n        return {...{}, ...Logger.DefaultSettings };\r\n    }\r\n\r\n    private assignLogger(): Logger {\r\n        if(!this.logger) {\r\n            const loggingSettings: ILoggerSettings = this.getLogSettings();\r\n            this.logger = new Logger(this.getLogCategory(), loggingSettings);\r\n        }\r\n\r\n        return this.logger;        \r\n    }\r\n}","import { LogType, Logger, LogLevel, ILoggerSettings } from '../Logger';\r\n\r\nexport const logFunc: (target: any, logLevel: LogLevel, loggingCategory: string, logType: LogType, ...logData: any[]) => void =\r\n(target: any, logLevel: LogLevel, loggingCategory: string, logType: LogType, ...logData: any[]): void => {\r\n    const containsLogger: boolean = typeof target['logger'] === 'object'; // && (target as any).getLogger() instanceof Logger;\r\n    let loggingSettings: ILoggerSettings = containsLogger ? (target as any).logger.getCurrentSettings() : {...{}, ...Logger.DefaultSettings};\r\n    loggingSettings.LogLevel = logLevel;\r\n    const logger: Logger = new Logger(loggingCategory, loggingSettings);\r\n    logger.logToConsole(logType, ...logData);\r\n};\r\n\r\nexport const getLogCategoryOrCustom: (target: any, customLogCategory?: string, fallbackValue?: string) => any = (target: any, customLogCategory: string = null, fallbackValue: string = '') => {\r\n    let loggingCategory: string = '';\r\n    \r\n    if (typeof customLogCategory === 'string') {\r\n        loggingCategory = customLogCategory;\r\n    } else {\r\n        const containsLoggingCategory: boolean = typeof target['getLogCategory'] === 'function' && typeof (target as any).getLogCategory() === 'string';\r\n        // console.log(\"SSC\", typeof target['getLogCategory'], (\" loggingCategory: \" +loggingCategory.slice(0) ), (\" customLogCategory: \" + customLogCategory));\r\n        loggingCategory = containsLoggingCategory ? (target as any).getLogCategory() : fallbackValue;\r\n    }\r\n\r\n    return loggingCategory;\r\n};\r\n\r\nexport const getLogSettings: () => ILoggerSettings = (): ILoggerSettings => {\r\n    return Logger.DefaultSettings;\r\n};","import { LogType, LogLevel, Logger, ILoggerSettings } from '../Logger';\r\nimport { IClassLoggerDecoratorOptions } from './options.decorators';\r\nimport { getLogCategoryOrCustom, logFunc as logFuncUtil, getLogSettings } from './decorators.utility';\r\n\r\nconst defaultOptions: IClassLoggerDecoratorOptions = {\r\n    customLogCategory: null,\r\n    logLevel: null,\r\n    override: true\r\n};\r\n\r\n//TODO: Check for generic classes MyClass<T>...\r\n\r\n/**\r\n* A Class logger dexorator\r\n* For Intellisense with the @classLogger(), use this:\r\n* @example export interface MyClass extends LoggerBase {}; export class MyClass;\r\n*/\r\nexport const classLogger: (options: IClassLoggerDecoratorOptions) => any = (options: IClassLoggerDecoratorOptions = null): any => {\r\n\r\n    options = {...defaultOptions, ...options};\r\n\r\n    const classLoggerFunc: <T extends { new(...args: any[]) }>(Base: T) => any = <T extends { new(...args: any[]) }>(Base: T): any => {\r\n        // save a reference to the original constructor\r\n        const original: T = Base;\r\n        const fallbackName: string = (original as any) && (original as any).name ? (original as any).name : '';\r\n\r\n        const enableConsoleLogging: LogLevel = options.logLevel ? options.logLevel : {...{}, ...Logger.DefaultSettings}.LogLevel;\r\n        const loggingCategory: string = getLogCategoryOrCustom(original, options.customLogCategory, fallbackName);\r\n\r\n        const getLogCategoryFunc: () => string = (): string => {\r\n            return getLogCategoryOrCustom(original, options.customLogCategory, fallbackName);\r\n        };\r\n\r\n        const logFunc: (logType: LogType, ...logData: any[]) => void = (logType: LogType, ...logData: any[]): void => {\r\n            logFuncUtil(original, enableConsoleLogging, loggingCategory, logType, ...logData);\r\n        };\r\n\r\n        const logSettingsFunc: () => ILoggerSettings = (): ILoggerSettings => {\r\n            return getLogSettings();\r\n        };\r\n\r\n        if (options.override) {\r\n            original.prototype.getLogCategory = getLogCategoryFunc;\r\n            original.prototype.log = logFunc;\r\n            original.prototype.getLogSettings = logSettingsFunc;\r\n        } else {\r\n            original.prototype.getLogCategory = original.prototype.getLogCategory || getLogCategoryFunc;\r\n            original.prototype.log = original.prototype.log || logFunc;\r\n            original.prototype.getLogSettings = original.prototype.getLogSettings || logSettingsFunc;\r\n        }\r\n\r\n        // a utility function to generate instances of a class\r\n        function construct(classConstructor: any, args: any[]): any {\r\n            const c: any = function (): any {\r\n                return classConstructor.apply(this, args);\r\n            };\r\n            c.prototype = classConstructor.prototype;\r\n            let instanceObj = new c();\r\n            instanceObj.logger = new Logger(instanceObj.getLogCategory(), instanceObj.getLogSettings());\r\n            return instanceObj;\r\n        }\r\n\r\n        // the new constructor behaviour\r\n        const f: any = (...args: any[]): any => {\r\n            return construct(original, args);\r\n        };\r\n\r\n        // copy prototype so intanceof operator still works\r\n        f.prototype = original.prototype;\r\n\r\n        // return new constructor (will override original)\r\n        return f;\r\n    };\r\n\r\n    return classLoggerFunc;\r\n};","import { LogType, LogLevel, Logger, ILoggerSettings } from '../Logger';\r\nimport { getLogCategoryOrCustom, logFunc as logFuncUtil } from './decorators.utility';\r\nimport { IMethodLoggerDecoratorOptions } from './options.decorators';\r\n\r\nconst defaultOptions: IMethodLoggerDecoratorOptions = {\r\n    customLogCategory: null,\r\n    logLevel: null\r\n};\r\n\r\nexport const methodLogger: (options: IMethodLoggerDecoratorOptions) => any = (options: IMethodLoggerDecoratorOptions = null): any => {\r\n\r\n    options = {...defaultOptions, ...options};\r\n    \r\n    return (target: Object, propertyKey: string, descriptor: TypedPropertyDescriptor<Function>): any => {\r\n\r\n        const originalMethod: any = descriptor.value!;\r\n\r\n        descriptor.value = function(): any {\r\n            \r\n            \r\n            let logLevel: LogLevel = options.logLevel;\r\n            const loggingCategory: string = getLogCategoryOrCustom(target, options.customLogCategory, propertyKey);\r\n            let containsLogLevel: boolean = typeof logLevel !== 'undefined' && logLevel !== null;\r\n            let targetContainsGetLogSettings: boolean = typeof target[\"getLogSettings\"] == \"function\";\r\n            if(!containsLogLevel && targetContainsGetLogSettings) {\r\n                const settings = target[\"getLogSettings\"]();\r\n                if(settings && typeof settings[\"LogLevel\"] == \"number\") {\r\n                    logLevel = settings[\"LogLevel\"];\r\n                    containsLogLevel = true;\r\n                }\r\n            }\r\n\r\n            logLevel = containsLogLevel ? logLevel : Logger.DefaultSettings.LogLevel;\r\n\r\n            const logFunc: (logType: LogType, ...logData: any[]) => void = (logType: LogType, ...logData: any[]): void => {\r\n                logFuncUtil(target, logLevel, loggingCategory, logType, ...logData);\r\n            };\r\n\r\n            if (arguments && arguments.length > 0) {\r\n                logFunc(LogType.Log, [`${propertyKey} START with params`, arguments]);\r\n            } else {\r\n                logFunc(LogType.Log, `${propertyKey} START`);\r\n            }\r\n\r\n            const result: any = originalMethod.apply(this, arguments);\r\n\r\n            if(!(result instanceof Promise)) {\r\n                logFunc(LogType.Log, `${propertyKey} END`);\r\n                return result;\r\n            }\r\n\r\n            return Promise.resolve(result).then((value) => {\r\n                logFunc(LogType.Log, `${propertyKey} END`);\r\n                return value;\r\n            }).catch((error) => {\r\n                logFunc(LogType.Error, `ERROR occurred in ${propertyKey}`);\r\n                logFunc(LogType.Error, error);\r\n                logFunc(LogType.Log, `${propertyKey} END`);\r\n                return Promise.reject(error);\r\n            });\r\n        };\r\n    };\r\n};","import { LogType, LogLevel, Logger } from '../Logger';\r\nimport { getLogCategoryOrCustom, logFunc as logFuncUtil } from './decorators.utility';\r\nimport { IPropertyLoggerDecoratorOptions } from './options.decorators';\r\n\r\nconst defaultOptions: IPropertyLoggerDecoratorOptions = {\r\n    customLogCategory: null,\r\n    logLevel: null\r\n};\r\n\r\nexport const propertyLogger: (options?: IPropertyLoggerDecoratorOptions) => any = (options: IPropertyLoggerDecoratorOptions = null): any => {\r\n\r\n    options = {...defaultOptions, ...options};\r\n\r\n    return (target: Object, propertyName: string) => {\r\n        \r\n        let logLevel: LogLevel = options.logLevel;\r\n        let containsLogLevel: boolean = typeof logLevel !== 'undefined' && logLevel !== null;\r\n\r\n        const logFunc: (currentInstance: Object, logType: LogType, ...logData: any[]) => void = (currentInstance: Object, logType: LogType, ...logData: any[]): void => {\r\n            \r\n            let loggingCategory: string = getLogCategoryOrCustom(currentInstance, options.customLogCategory, `${target.constructor['name']}.${propertyName}`);\r\n            \r\n            let targetContainsGetLogSettings: boolean = typeof currentInstance[\"getLogSettings\"] == \"function\";\r\n            if(!containsLogLevel && targetContainsGetLogSettings) {\r\n                const settings = currentInstance[\"getLogSettings\"]();\r\n                if(settings && typeof settings[\"LogLevel\"] == \"number\") {\r\n                    logLevel = settings[\"LogLevel\"];\r\n                    containsLogLevel = true;\r\n                }\r\n            }\r\n            logFuncUtil(target, logLevel, loggingCategory, logType, ...logData);\r\n        };\r\n\r\n        // property value\r\n        let _val: any = (target as any)[propertyName];\r\n\r\n        // property getter method\r\n        const getter: any = () => {\r\n            logFunc(target, LogType.Log, `Get: ${propertyName} => ${_val}`);\r\n            return _val;\r\n        };\r\n\r\n        // property setter method\r\n        const setter: any = newVal => {\r\n            logFunc(target, LogType.Log, `Set: ${propertyName} => ${newVal}`);\r\n            _val = newVal;\r\n        };\r\n\r\n        // Delete property.\r\n        if (delete ((target as any)[propertyName])) {\r\n\r\n            // Create new property with getter and setter\r\n            Object.defineProperty(target, propertyName, {\r\n                get: getter,\r\n                set: setter,\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n        }\r\n    };\r\n};","import { classLogger } from './class.decorators';\r\nimport { methodLogger } from './method.decorators';\r\nimport { IClassLoggerDecoratorOptions, IMethodLoggerDecoratorOptions, IPropertyLoggerDecoratorOptions } from './options.decorators';\r\nimport { propertyLogger } from './property.decorators';\r\n\r\n// decorator factory - which calls the corresponding decorators based on arguments passed\r\nexport const log: (options?: IMethodLoggerDecoratorOptions|IClassLoggerDecoratorOptions|IPropertyLoggerDecoratorOptions) => any = (options: IMethodLoggerDecoratorOptions|IClassLoggerDecoratorOptions|IPropertyLoggerDecoratorOptions = null): any => {\r\n\r\n    const factoryFunction: (...args: any[]) => any = (...args: any[]): any => {\r\n        switch (args.length) {\r\n            case 3: // can be method or property decorator\r\n                if (typeof args[2] === 'number' || typeof args[2] === 'undefined') {\r\n                    return propertyLogger(options).apply(this, args);\r\n                }\r\n                return methodLogger(options).apply(this, args);\r\n            case 2: // parameter decorator\r\n                return propertyLogger(options).apply(this, args);\r\n            case 1: // class decorator\r\n                // return classLogger.apply(this, args);\r\n                return classLogger(options).apply(this, args);\r\n            default: // invalid size of arguments\r\n                throw new Error('Not a valid decorator');\r\n        }\r\n    };\r\n\r\n    return factoryFunction;\r\n};","export { Logger, ILoggerSettings, LogType, LogLevel } from \"./logger/Logger\";\r\nexport { ClassLoggerBase } from \"./logger/ClassLoggerBase\";\r\nexport { IClassLogger } from \"./logger/IClassLogger\";\r\nexport { log } from './logger/decorators/logFactory.decorators';","// import { Logger, ILoggerSettings, LogLevel, IClassLogger, log } from '@spfxappdev/logger';\r\nimport { Logger, ILoggerSettings, LogLevel, IClassLogger, log, LogType } from '../../src/index';\r\n\r\n\r\nclass TestApp {\r\n    private logger: Logger;\r\n\r\n    constructor() {\r\n        this.logger = new Logger(\"spfxAppDev\");\r\n    }\r\n\r\n    public doThings(): void {\r\n        this.logger.log(\"doThings START\");\r\n        this.logger.log(\"Hello World\");\r\n        this.logger.log(\"doThings END\");\r\n    }\r\n\r\n    public doThingsWithParam(a: string, b: number): void {\r\n        this.logger.log(\"doThingsWithParam START\", a, b);\r\n        this.logger.log(\"Hello World\");\r\n        this.logger.log(\"doThingsWithParam END\", a, b);\r\n    }\r\n\r\n    public examples(): void {\r\n        this.logger.log(\"Welcome to @spfxappdev/logger\");\r\n        this.logger.warn(\"Welcome to @spfxappdev/logger\");\r\n        this.logger.info(\"Welcome to @spfxappdev/logger\");\r\n        this.logger.error(\"Welcome to @spfxappdev/logger\");\r\n        this.logger.table([\"Welcome to @spfxappdev/logger\"]);\r\n    }\r\n}\r\n\r\nconst myLoggerSettings: ILoggerSettings = {\r\n    LogNamespaceUrlParameterName: 'LogOnlyMy',\r\n    LoggingEnabledUrlParameterName: 'EnableLogging',\r\n    LogLevel: LogLevel.Log\r\n}\r\n\r\nLogger.DefaultSettings = myLoggerSettings;\r\n\r\nconst t: TestApp = new TestApp();\r\nt.doThings();\r\nt.doThingsWithParam(\"Hello console logger number\", 1);\r\nt.examples();\r\n\r\n//For Intellisense with the @classLogger(), use this:\r\ninterface TestAppWithDecorators extends IClassLogger { }\r\n     \r\n\r\n@log({\r\n    customLogCategory: \"myCustomLoggingCategory\",\r\n    override: false\r\n})\r\nclass TestAppWithDecorators {\r\n\r\n    @log()\r\n    public myProp: string = \"\";\r\n\r\n    @log()\r\n    public doThings(): void {\r\n        this.logger.log(\"Hello World\");\r\n    }\r\n\r\n    @log()\r\n    public doThingsWithParam(a: string, b: number): void {\r\n        this.logger.log(\"doThingsWithParam START\", a, b);\r\n        this.logger.log(\"Hello World\");\r\n        this.logger.log(\"doThingsWithParam END\", a, b);\r\n    }\r\n\r\n    @log()\r\n    public examples(): void {\r\n        this.myProp = \"Welcome to @spfxappdev/logger\";\r\n        this.logger.log(this.myProp);\r\n        this.logger.warn(this.myProp);\r\n        this.logger.info(this.myProp);\r\n        this.logger.error(this.myProp);\r\n        this.logger.table([this.myProp]);\r\n    }\r\n\r\n    public getLogSettings(): ILoggerSettings {\r\n        return {\r\n            LogNamespaceUrlParameterName: 'LogOnly',\r\n            LoggingEnabledUrlParameterName: 'EnableConsoleLogging',\r\n            LogLevel: LogLevel.Log,\r\n        };\r\n    }\r\n}\r\n\r\nconst t2: TestAppWithDecorators = new TestAppWithDecorators();\r\nt2.doThings();\r\nt2.doThingsWithParam(\"Hello console logger number\", 1);\r\nt2.examples();\r\nconsole.log({...{\r\n    LogNamespaceUrlParameterName: 'LogOnly',\r\n    LoggingEnabledUrlParameterName: 'EnableConsoleLogging',\r\n    LogLevel: LogLevel.None\r\n}, ...Logger.DefaultSettings, ...{ LogLevel: LogLevel.Error, LogNamespaceUrlParameterName: \"L\" }});\r\nconsole.log(Logger.DefaultSettings);\r\n\r\n//console.log(t2 instanceof TestAppWithDecorators);\r\n\r\n// console.log(isset((undefined)));\r\n// const arr = [{a: 1, b: 2}, {a: 2, b: 1}];\r\n// console.log(isset((arr)));\r\n// console.log(arr.FirstOrDefault(i => i.a == 1));\r\n// console.log(\"a\".Equals(\"A\"));\r\n\r\n// const myLogLevel: LogLevel = LogLevel.Error | LogLevel.Log;\r\n\r\n// console.log(\"GeneralEnabled\", !(LogLevel.None == (myLogLevel | LogLevel.None)), myLogLevel);\r\n// console.log(\"Enabled by Level\", LogLevel.Table == (myLogLevel & LogLevel.Table), myLogLevel);\r\n// console.log(typeof myLogLevel);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}